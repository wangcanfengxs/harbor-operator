apiVersion: goharbor.io/v1alpha2
kind: HarborCluster
metadata:
  name: harborcluster-sample
spec:
  harborAdminPasswordRef: admin-core-secret
  externalURL: https://core.harbor.domain
  redis:
    host: harbor-redis-master
    port: 6379
    passwordRef: harbor-redis
  database:
    hosts:
      - host: harbor-database-postgresql
        port: 5432
    username: postgres
    passwordRef: harbor-database-password
    sslMode: disable
  expose:
    core:
      ingress:
        host: core.harbor.domain
      tls:
        certificateRef: sample-public-certificate
  encryptionKeyRef: core-database-encryption
  internalTLS:
    enabled: true
  portal: {}
  registry: {}
  core:
    tokenIssuer:
      name: service-token
      kind: Issuer
  imageChartStorage:
    filesystem:
      registryPersistentVolume:
        claimName: sample-harbor-registry
  inClusterDatabase:
    kind: PostgresSQL
    postgresSqlSpec:
      storage: 1Gi
      replicas: 2
      version: "12"
      storageClassName: default
      resources:
        limits:
          cpu: 500m
          memory: 500Mi
        requests:
          cpu: 100m
          memory: 250Mi
  inClusterStorage:
    kind: MinIO
    minIOSpec:
      replicas: 2
      volumesPerServer: 1
      resources:
        limits:
          cpu: 500m
          memory: 500Mi
        requests:
          cpu: 100m
          memory: 250Mi
  inClusterCache:
    kind: Redis
    redisSpec:
      server:
        replicas: 1
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 250Mi
